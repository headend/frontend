# Generated by Django 2.2.12 on 2020-12-13 09:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ip_control', models.CharField(max_length=15, unique=True)),
                ('ip_receive_multicast', models.CharField(blank=True, max_length=15, null=True)),
                ('cpu', models.SmallIntegerField(blank=True, null=True)),
                ('ram', models.SmallIntegerField(blank=True, null=True)),
                ('disk', models.SmallIntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=60, null=True)),
                ('is_monitor', models.IntegerField(blank=True, null=True)),
                ('is_alarm', models.IntegerField(blank=True, null=True)),
                ('signal_monitor', models.IntegerField(blank=True, null=True)),
                ('video_monitor', models.IntegerField(blank=True, null=True)),
                ('audio_monitor', models.IntegerField(blank=True, null=True)),
                ('run_thread', models.IntegerField(blank=True, null=True)),
                ('date_create', models.DateTimeField(blank=True, null=True)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agent',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('desc', models.CharField(blank=True, max_length=60, null=True)),
                ('date_create', models.DateTimeField(blank=True, null=True)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'channel',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Encoder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45, unique=True)),
                ('ip', models.CharField(blank=True, max_length=45, null=True, unique=True)),
                ('location', models.CharField(blank=True, max_length=60, null=True)),
                ('hardware', models.CharField(blank=True, max_length=45, null=True)),
                ('desc', models.CharField(blank=True, max_length=45, null=True)),
                ('date_create', models.DateTimeField(blank=True, null=True)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'encoder',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Enviroment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('desc', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'enviroment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroupChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('desc', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'group_channel',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroupProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('desc', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'group_profile',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MulticastIp',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ip', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('desc', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'multicast_ip',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfileQuality',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quality', models.CharField(max_length=45, unique=True)),
                ('description', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'profile_quality',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SatelliteDishe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('diameter', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('location', models.CharField(blank=True, max_length=60, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('date_create', models.DateTimeField(blank=True, null=True)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
                ('env', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Enviroment')),
            ],
            options={
                'db_table': 'satellite_dishe',
                'managed': True,
                'unique_together': {('id', 'env')},
            },
        ),
        migrations.CreateModel(
            name='VlanProvider',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('address', models.CharField(blank=True, max_length=60, null=True)),
                ('desc', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'vlan_provider',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vlan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('vlanid', models.CharField(max_length=30)),
                ('desc', models.CharField(blank=True, max_length=60, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('date_create', models.DateTimeField(blank=True, null=True)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
                ('env', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Enviroment')),
                ('vlan_provider', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.VlanProvider')),
            ],
            options={
                'db_table': 'vlan',
                'managed': True,
                'unique_together': {('vlan_provider', 'env', 'vlanid')},
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('desc', models.CharField(blank=True, max_length=60, null=True)),
                ('date_create', models.DateTimeField(blank=True, null=True)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
                ('is_original', models.IntegerField()),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Channel')),
                ('encoder', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Encoder')),
                ('multicast_ip', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.MulticastIp')),
                ('profile_quality', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.ProfileQuality')),
                ('vlan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Vlan')),
            ],
            options={
                'db_table': 'profile',
                'managed': True,
                'unique_together': {('profile_quality', 'channel', 'multicast_ip')},
            },
        ),
        migrations.AddField(
            model_name='encoder',
            name='enviroment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Enviroment'),
        ),
        migrations.CreateModel(
            name='UserHasMulticastIp',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('multicast_ip', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.MulticastIp')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_has_multicast_ip',
                'managed': True,
                'unique_together': {('multicast_ip', 'user')},
            },
        ),
        migrations.CreateModel(
            name='SatelliteDisheHasMulticastIp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('multicast_ip', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.MulticastIp')),
                ('satellite_dishe', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.SatelliteDishe')),
            ],
            options={
                'db_table': 'satellite_dishe_has_multicast_ip',
                'managed': True,
                'unique_together': {('multicast_ip', 'satellite_dishe')},
            },
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_signal', models.IntegerField(blank=True, null=True)),
                ('status_video', models.IntegerField(blank=True, null=True)),
                ('status_audio', models.IntegerField(blank=True, null=True)),
                ('signal_monitor', models.IntegerField(blank=True, null=True)),
                ('video_monitor', models.IntegerField(blank=True, null=True)),
                ('audio_monitor', models.IntegerField(blank=True, null=True)),
                ('is_enable', models.IntegerField(blank=True, null=True)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Agent')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Profile')),
            ],
            options={
                'db_table': 'monitor',
                'managed': True,
                'unique_together': {('profile', 'agent')},
            },
        ),
        migrations.CreateModel(
            name='GroupProfileHasProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.GroupProfile')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Profile')),
            ],
            options={
                'db_table': 'group_profile_has_profile',
                'managed': True,
                'unique_together': {('profile', 'group_profile')},
            },
        ),
        migrations.CreateModel(
            name='GroupChannelHasChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Channel')),
                ('group_channel', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.GroupChannel')),
            ],
            options={
                'db_table': 'group_channel_has_channel',
                'managed': True,
                'unique_together': {('channel', 'group_channel')},
            },
        ),
        migrations.CreateModel(
            name='EncoderInputProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('encoder', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Encoder')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Profile')),
            ],
            options={
                'db_table': 'encoder_input_profile',
                'managed': True,
                'unique_together': {('encoder', 'profile')},
            },
        ),
        migrations.CreateModel(
            name='EncoderHasVlan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('encoder', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Encoder')),
                ('vlan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Vlan')),
            ],
            options={
                'db_table': 'encoder_has_vlan',
                'managed': True,
                'unique_together': {('vlan', 'encoder')},
            },
        ),
        migrations.CreateModel(
            name='AgentHasVlan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Agent')),
                ('vlan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Vlan')),
            ],
            options={
                'db_table': 'agent_has_vlan',
                'managed': True,
                'unique_together': {('vlan', 'agent')},
            },
        ),
        migrations.CreateModel(
            name='AgentHasGroupProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.Agent')),
                ('group_profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='agent.GroupProfile')),
            ],
            options={
                'db_table': 'agent_has_group_profile',
                'managed': True,
                'unique_together': {('agent', 'group_profile')},
            },
        ),
    ]
